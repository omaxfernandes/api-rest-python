stages:
  - build
  - test
  - deploy

variables:
  DOCKER_IMAGE: "your-docker-image"
  DOCKER_TAG: "latest"

build:
  stage: build
  script:
    - echo "Building the application..."
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker save $DOCKER_IMAGE:$DOCKER_TAG | gzip > $DOCKER_IMAGE_$DOCKER_TAG.tar.gz
  artifacts:
    paths:
      - $DOCKER_IMAGE_$DOCKER_TAG.tar.gz

test-dev:
  stage: test
  script:
    - echo "Running tests in Dev environment..."
    - docker load < $DOCKER_IMAGE_$DOCKER_TAG.tar.gz
    - docker run --rm $DOCKER_IMAGE:$DOCKER_TAG npm run test
  only:
    - develop

deploy-dev:
  stage: deploy
  script:
    - echo "Deploying to Dev environment..."
    - docker load < $DOCKER_IMAGE_$DOCKER_TAG.tar.gz
    - docker run -d --name dev_container $DOCKER_IMAGE:$DOCKER_TAG
  environment:
    name: dev
  only:
    - develop

deploy-uat:
  stage: deploy
  script:
    - echo "Deploying to UAT environment..."
    - docker load < $DOCKER_IMAGE_$DOCKER_TAG.tar.gz
    - docker run -d --name uat_container $DOCKER_IMAGE:$DOCKER_TAG
  environment:
    name: uat
  only:
    - uat

deploy-hml:
  stage: deploy
  script:
    - echo "Deploying to HML environment..."
    - docker load < $DOCKER_IMAGE_$DOCKER_TAG.tar.gz
    - docker run -d --name hml_container $DOCKER_IMAGE:$DOCKER_TAG
  environment:
    name: hml
  only:
    - hml

deploy-prd:
  stage: deploy
  script:
    - echo "Deploying to PRD environment..."
    - docker load < $DOCKER_IMAGE_$DOCKER_TAG.tar.gz
    - docker run -d --name prd_container $DOCKER_IMAGE:$DOCKER_TAG
  environment:
    name: prd
  only:
    - main
